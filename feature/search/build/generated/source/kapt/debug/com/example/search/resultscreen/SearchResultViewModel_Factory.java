// Generated by Dagger (https://dagger.dev).
package com.example.search.resultscreen;

import com.example.domain.search.SearchResultUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SearchResultViewModel_Factory implements Factory<SearchResultViewModel> {
  private final Provider<SearchResultUseCase> searchResultUseCaseProvider;

  public SearchResultViewModel_Factory(Provider<SearchResultUseCase> searchResultUseCaseProvider) {
    this.searchResultUseCaseProvider = searchResultUseCaseProvider;
  }

  @Override
  public SearchResultViewModel get() {
    return newInstance(searchResultUseCaseProvider.get());
  }

  public static SearchResultViewModel_Factory create(
      Provider<SearchResultUseCase> searchResultUseCaseProvider) {
    return new SearchResultViewModel_Factory(searchResultUseCaseProvider);
  }

  public static SearchResultViewModel newInstance(SearchResultUseCase searchResultUseCase) {
    return new SearchResultViewModel(searchResultUseCase);
  }
}
